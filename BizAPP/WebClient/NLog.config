<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" throwExceptions="true" autoReload="true" throwConfigExceptions="true">
	<variable name="region" value=""/>
	<variable name="environment" value="Staging" />
	<extensions>
		<!--
			<add assembly="BizAPP.Common.AWS" />
		-->
		<add assembly="NLog.Targets.ElasticSearch"/>
	</extensions>
	<targets>
		<target xsi:type="Trace" name="tracelog" layout="${longdate} ${level:uppercase=true} ${logger} - ${message} ${exception:format=ToString,Data}"  />
		<target xsi:type="AsyncWrapper" name="dblog" queueLimit="10000" timeToSleepBetweenBatches="20000" batchSize="200" overflowAction="Grow">
			<target xsi:type="Database" name="db">
				<connectionString>Data source=localhost;Initial Catalog=audit;user id=user;Password=pwd</connectionString>
				<commandText>
					insert into dbo.NLog (Application, Logged, Level, Message,Username,ServerName, Port, Url, Https,ServerAddress, RemoteAddress,Logger, CallSite, Exception, ExceptionMsg)
					values (@Application, @Logged, @Level, @Message,@Username,@ServerName, @Port, @Url, @Https,@ServerAddress, @RemoteAddress,@Logger, @Callsite, @Exception, @exceptionmsg );
				</commandText>
				<parameter name="@application" layout="${processname}" />
				<parameter name="@logged" layout="${date}" />
				<parameter name="@level" layout="${level}" />
				<parameter name="@message" layout="${message}" />
				<parameter name="@username" layout="${identity}" />
				<parameter name="@serverName" layout="${aspnet-request:serverVariable=SERVER_NAME}" />
				<parameter name="@port" layout="${aspnet-request:serverVariable=SERVER_PORT}" />
				<parameter name="@url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
				<parameter name="@https" layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />
				<parameter name="@serverAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
				<parameter name="@remoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
				<parameter name="@logger" layout="${logger}" />
				<parameter name="@callSite" layout="${callsite}" />
				<parameter name="@exception" layout="${exception:tostring}" />
				<parameter name="@exceptionmsg" layout="${exception}" />
			</target>
		</target>
		<target xsi:type="FilteringWrapper" name="sqllog" condition="'${event-properties:item=TimeMS}' >= 100">
			<target xsi:type="AsyncWrapper"
				name="asyncsqllog"
				queueLimit="10000"
				timeToSleepBetweenBatches="30000"
				batchSize="200"
				overflowAction="Grow">
				<target xsi:type="Database" name="sql">
					<connectionString>Data source=localhost;Initial Catalog=audit;user id=user;Password=pwd</connectionString>
					<commandText>insert into dbo.sqllog( Host, DbName, Logged, Url,TimeInMS, Sql, QueryEid) values ( @Host,@DbName, @Logged, @Url, @TimeInMS, @Sql, @QueryEid );</commandText>
					<parameter name="@Host" layout="${aspnet-request:serverVariable=HTTP_HOST}" />
					<parameter name="@DbName" layout="${event-properties:item=DbName}" />
					<parameter name="@logged" layout="${date}" />
					<parameter name="@url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
					<parameter name="@TimeInMS" layout="${event-properties:item=TimeMS}" />
					<parameter name="@Sql" layout="${event-properties:item=Sql}" />
					<parameter name="@QueryEid" layout="${event-properties:item=EnterpriseId}" />
				</target>
			</target>
		</target>
		<target xsi:type="BufferingWrapper"
			name="maillog"
			slidingTimeout="false"
			bufferSize="2"
			flushTimeout="-1">
			<target name="email" xsi:type="Mail"
				smtpServer="smtp"
				smtpPort="25"
				smtpAuthentication="Basic"
				smtpUserName="user"
				smtpPassword="pwd"
				enableSsl="true"
				subject="Error Report From NLog"
				from="support@yourdomain.com"
				to="email@yourdomain.com"
				layout="${longdate} ${uppercase:${level}} ${callsite:className=true:includeSourcePath=true:methodName=true} ${message}${newline}${exception:tostring}"
				/>
		</target>
		<!--
		<target xsi:type="AsyncWrapper" name="awslog" queueLimit="10000" timeToSleepBetweenBatches="20000" batchSize="5" overflowAction="Grow">
				<target name="aws" xsi:type="AWSTarget" logGroup="Web" region="${region}" logStreamNameSuffix="BizAPP"/>
		</target>
		-->
		<target name="elasticsearch" xsi:type="BufferingWrapper" flushTimeout="1000">
			<target xsi:type="ElasticSearch"
					requireAuth="false"
					includeAllProperties="true"
					uri="http://192.168.2.119:9200/"
					index="bizapp-${date:format=yyyy.MM.dd}">
				<field name="Environment" layout="${environment}" />
				<field name="MachineName" layout="${machinename}" />
				<field name="EventDateTime" layout="${date:s}" />
				<field name="EventLevel" layout="${level}" />
				<field name="UserName" layout="${identity:authType=false:isAuthenticated=false}" />
				<field name="Logger" layout="${logger}" />
				<field name="EventMessage" layout="${message}" />
				<field name="Action" layout="${event-properties:item=Action}" />
				<field name="Account" layout="${event-properties:item=Account}" />
				<field name="ModifiedBy" layout="${event-properties:item=ModifiedBy}" />
				<field name="DateTime" layout="${event-properties:item=DateTime}" />
				<field name="IpAddress" layout="${event-properties:item=IpAddress}" />
				<field name="SessionId" layout="${aspnet-sessionid}"/>
				<field name="URL" layout="${aspnet-request:serverVariable=URL}${aspnet-request:queryString}"/>
			</target>
		</target>
	</targets>
	<rules>
		<logger name="BizAPP*" minlevel="Debug" maxlevel="Fatal" writeTo="tracelog" enabled="false"/>
		<logger name="BizAPP*" minlevel="Debug" maxlevel="Fatal" writeTo="elasticsearch" enabled="false"/>
		<logger name="BizAPP.WebExceptions" minlevel="Error" maxlevel="Fatal" writeTo="dblog" enabled="false" />
		<logger name="BizAPP.WebExceptions" minlevel="Error" maxlevel="Fatal" writeTo="maillog" enabled="false" />
		<logger name="SQL.Execution" minlevel="Debug" writeTo="sqllog" enabled="false" />
	</rules>
</nlog>